import { ExceptionOptionType as __ExceptionOptionType } from "@smithy/smithy-client";
import { StreamingBlobTypes } from "@smithy/types";
import { KinesisVideoMediaServiceException as __BaseException } from "./KinesisVideoMediaServiceException";
export declare class ClientLimitExceededException extends __BaseException {
  readonly name: "ClientLimitExceededException";
  readonly $fault: "client";
  Message?: string | undefined;
  constructor(
    opts: __ExceptionOptionType<ClientLimitExceededException, __BaseException>
  );
}
export declare class ConnectionLimitExceededException extends __BaseException {
  readonly name: "ConnectionLimitExceededException";
  readonly $fault: "client";
  Message?: string | undefined;
  constructor(
    opts: __ExceptionOptionType<
      ConnectionLimitExceededException,
      __BaseException
    >
  );
}
export declare const StartSelectorType: {
  readonly CONTINUATION_TOKEN: "CONTINUATION_TOKEN";
  readonly EARLIEST: "EARLIEST";
  readonly FRAGMENT_NUMBER: "FRAGMENT_NUMBER";
  readonly NOW: "NOW";
  readonly PRODUCER_TIMESTAMP: "PRODUCER_TIMESTAMP";
  readonly SERVER_TIMESTAMP: "SERVER_TIMESTAMP";
};
export type StartSelectorType =
  (typeof StartSelectorType)[keyof typeof StartSelectorType];
export interface StartSelector {
  StartSelectorType: StartSelectorType | undefined;
  AfterFragmentNumber?: string | undefined;
  StartTimestamp?: Date | undefined;
  ContinuationToken?: string | undefined;
}
export interface GetMediaInput {
  StreamName?: string | undefined;
  StreamARN?: string | undefined;
  StartSelector: StartSelector | undefined;
}
export interface GetMediaOutput {
  ContentType?: string | undefined;
  Payload?: StreamingBlobTypes | undefined;
}
export declare class InvalidArgumentException extends __BaseException {
  readonly name: "InvalidArgumentException";
  readonly $fault: "client";
  Message?: string | undefined;
  constructor(
    opts: __ExceptionOptionType<InvalidArgumentException, __BaseException>
  );
}
export declare class InvalidEndpointException extends __BaseException {
  readonly name: "InvalidEndpointException";
  readonly $fault: "client";
  Message?: string | undefined;
  constructor(
    opts: __ExceptionOptionType<InvalidEndpointException, __BaseException>
  );
}
export declare class NotAuthorizedException extends __BaseException {
  readonly name: "NotAuthorizedException";
  readonly $fault: "client";
  Message?: string | undefined;
  constructor(
    opts: __ExceptionOptionType<NotAuthorizedException, __BaseException>
  );
}
export declare class ResourceNotFoundException extends __BaseException {
  readonly name: "ResourceNotFoundException";
  readonly $fault: "client";
  Message?: string | undefined;
  constructor(
    opts: __ExceptionOptionType<ResourceNotFoundException, __BaseException>
  );
}
export declare const GetMediaOutputFilterSensitiveLog: (
  obj: GetMediaOutput
) => any;

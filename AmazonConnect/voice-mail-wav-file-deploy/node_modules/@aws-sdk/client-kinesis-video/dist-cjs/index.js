"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __name = (target, value) => __defProp(target, "name", { value, configurable: true });
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// src/index.ts
var index_exports = {};
__export(index_exports, {
  APIName: () => APIName,
  AccessDeniedException: () => AccessDeniedException,
  AccountChannelLimitExceededException: () => AccountChannelLimitExceededException,
  AccountStreamLimitExceededException: () => AccountStreamLimitExceededException,
  ChannelProtocol: () => ChannelProtocol,
  ChannelRole: () => ChannelRole,
  ChannelType: () => ChannelType,
  ClientLimitExceededException: () => ClientLimitExceededException,
  ComparisonOperator: () => ComparisonOperator,
  ConfigurationStatus: () => ConfigurationStatus,
  CreateSignalingChannelCommand: () => CreateSignalingChannelCommand,
  CreateStreamCommand: () => CreateStreamCommand,
  DeleteEdgeConfigurationCommand: () => DeleteEdgeConfigurationCommand,
  DeleteSignalingChannelCommand: () => DeleteSignalingChannelCommand,
  DeleteStreamCommand: () => DeleteStreamCommand,
  DescribeEdgeConfigurationCommand: () => DescribeEdgeConfigurationCommand,
  DescribeEdgeConfigurationOutputFilterSensitiveLog: () => DescribeEdgeConfigurationOutputFilterSensitiveLog,
  DescribeImageGenerationConfigurationCommand: () => DescribeImageGenerationConfigurationCommand,
  DescribeMappedResourceConfigurationCommand: () => DescribeMappedResourceConfigurationCommand,
  DescribeMediaStorageConfigurationCommand: () => DescribeMediaStorageConfigurationCommand,
  DescribeNotificationConfigurationCommand: () => DescribeNotificationConfigurationCommand,
  DescribeSignalingChannelCommand: () => DescribeSignalingChannelCommand,
  DescribeStreamCommand: () => DescribeStreamCommand,
  DeviceStreamLimitExceededException: () => DeviceStreamLimitExceededException,
  EdgeConfigFilterSensitiveLog: () => EdgeConfigFilterSensitiveLog,
  Format: () => Format,
  FormatConfigKey: () => FormatConfigKey,
  GetDataEndpointCommand: () => GetDataEndpointCommand,
  GetSignalingChannelEndpointCommand: () => GetSignalingChannelEndpointCommand,
  ImageSelectorType: () => ImageSelectorType,
  InvalidArgumentException: () => InvalidArgumentException,
  InvalidDeviceException: () => InvalidDeviceException,
  InvalidResourceFormatException: () => InvalidResourceFormatException,
  KinesisVideo: () => KinesisVideo,
  KinesisVideoClient: () => KinesisVideoClient,
  KinesisVideoServiceException: () => KinesisVideoServiceException,
  ListEdgeAgentConfigurationsCommand: () => ListEdgeAgentConfigurationsCommand,
  ListEdgeAgentConfigurationsEdgeConfigFilterSensitiveLog: () => ListEdgeAgentConfigurationsEdgeConfigFilterSensitiveLog,
  ListEdgeAgentConfigurationsOutputFilterSensitiveLog: () => ListEdgeAgentConfigurationsOutputFilterSensitiveLog,
  ListSignalingChannelsCommand: () => ListSignalingChannelsCommand,
  ListStreamsCommand: () => ListStreamsCommand,
  ListTagsForResourceCommand: () => ListTagsForResourceCommand,
  ListTagsForStreamCommand: () => ListTagsForStreamCommand,
  MediaSourceConfigFilterSensitiveLog: () => MediaSourceConfigFilterSensitiveLog,
  MediaStorageConfigurationStatus: () => MediaStorageConfigurationStatus,
  MediaUriType: () => MediaUriType,
  NoDataRetentionException: () => NoDataRetentionException,
  NotAuthorizedException: () => NotAuthorizedException,
  RecorderConfigFilterSensitiveLog: () => RecorderConfigFilterSensitiveLog,
  RecorderStatus: () => RecorderStatus,
  ResourceInUseException: () => ResourceInUseException,
  ResourceNotFoundException: () => ResourceNotFoundException,
  StartEdgeConfigurationUpdateCommand: () => StartEdgeConfigurationUpdateCommand,
  StartEdgeConfigurationUpdateInputFilterSensitiveLog: () => StartEdgeConfigurationUpdateInputFilterSensitiveLog,
  StartEdgeConfigurationUpdateOutputFilterSensitiveLog: () => StartEdgeConfigurationUpdateOutputFilterSensitiveLog,
  Status: () => Status,
  StrategyOnFullSize: () => StrategyOnFullSize,
  StreamEdgeConfigurationNotFoundException: () => StreamEdgeConfigurationNotFoundException,
  SyncStatus: () => SyncStatus,
  TagResourceCommand: () => TagResourceCommand,
  TagStreamCommand: () => TagStreamCommand,
  TagsPerResourceExceededLimitException: () => TagsPerResourceExceededLimitException,
  UntagResourceCommand: () => UntagResourceCommand,
  UntagStreamCommand: () => UntagStreamCommand,
  UpdateDataRetentionCommand: () => UpdateDataRetentionCommand,
  UpdateDataRetentionOperation: () => UpdateDataRetentionOperation,
  UpdateImageGenerationConfigurationCommand: () => UpdateImageGenerationConfigurationCommand,
  UpdateMediaStorageConfigurationCommand: () => UpdateMediaStorageConfigurationCommand,
  UpdateNotificationConfigurationCommand: () => UpdateNotificationConfigurationCommand,
  UpdateSignalingChannelCommand: () => UpdateSignalingChannelCommand,
  UpdateStreamCommand: () => UpdateStreamCommand,
  UploaderStatus: () => UploaderStatus,
  VersionMismatchException: () => VersionMismatchException,
  __Client: () => import_smithy_client.Client,
  paginateDescribeMappedResourceConfiguration: () => paginateDescribeMappedResourceConfiguration,
  paginateListEdgeAgentConfigurations: () => paginateListEdgeAgentConfigurations,
  paginateListSignalingChannels: () => paginateListSignalingChannels,
  paginateListStreams: () => paginateListStreams
});
module.exports = __toCommonJS(index_exports);

// src/KinesisVideoClient.ts
var import_middleware_host_header = require("@aws-sdk/middleware-host-header");
var import_middleware_logger = require("@aws-sdk/middleware-logger");
var import_middleware_recursion_detection = require("@aws-sdk/middleware-recursion-detection");
var import_middleware_user_agent = require("@aws-sdk/middleware-user-agent");
var import_config_resolver = require("@smithy/config-resolver");
var import_core = require("@smithy/core");
var import_middleware_content_length = require("@smithy/middleware-content-length");
var import_middleware_endpoint = require("@smithy/middleware-endpoint");
var import_middleware_retry = require("@smithy/middleware-retry");

var import_httpAuthSchemeProvider = require("./auth/httpAuthSchemeProvider");

// src/endpoint/EndpointParameters.ts
var resolveClientEndpointParameters = /* @__PURE__ */ __name((options) => {
  return Object.assign(options, {
    useDualstackEndpoint: options.useDualstackEndpoint ?? false,
    useFipsEndpoint: options.useFipsEndpoint ?? false,
    defaultSigningName: "kinesisvideo"
  });
}, "resolveClientEndpointParameters");
var commonParams = {
  UseFIPS: { type: "builtInParams", name: "useFipsEndpoint" },
  Endpoint: { type: "builtInParams", name: "endpoint" },
  Region: { type: "builtInParams", name: "region" },
  UseDualStack: { type: "builtInParams", name: "useDualstackEndpoint" }
};

// src/KinesisVideoClient.ts
var import_runtimeConfig = require("././runtimeConfig");

// src/runtimeExtensions.ts
var import_region_config_resolver = require("@aws-sdk/region-config-resolver");
var import_protocol_http = require("@smithy/protocol-http");
var import_smithy_client = require("@smithy/smithy-client");

// src/auth/httpAuthExtensionConfiguration.ts
var getHttpAuthExtensionConfiguration = /* @__PURE__ */ __name((runtimeConfig) => {
  const _httpAuthSchemes = runtimeConfig.httpAuthSchemes;
  let _httpAuthSchemeProvider = runtimeConfig.httpAuthSchemeProvider;
  let _credentials = runtimeConfig.credentials;
  return {
    setHttpAuthScheme(httpAuthScheme) {
      const index = _httpAuthSchemes.findIndex((scheme) => scheme.schemeId === httpAuthScheme.schemeId);
      if (index === -1) {
        _httpAuthSchemes.push(httpAuthScheme);
      } else {
        _httpAuthSchemes.splice(index, 1, httpAuthScheme);
      }
    },
    httpAuthSchemes() {
      return _httpAuthSchemes;
    },
    setHttpAuthSchemeProvider(httpAuthSchemeProvider) {
      _httpAuthSchemeProvider = httpAuthSchemeProvider;
    },
    httpAuthSchemeProvider() {
      return _httpAuthSchemeProvider;
    },
    setCredentials(credentials) {
      _credentials = credentials;
    },
    credentials() {
      return _credentials;
    }
  };
}, "getHttpAuthExtensionConfiguration");
var resolveHttpAuthRuntimeConfig = /* @__PURE__ */ __name((config) => {
  return {
    httpAuthSchemes: config.httpAuthSchemes(),
    httpAuthSchemeProvider: config.httpAuthSchemeProvider(),
    credentials: config.credentials()
  };
}, "resolveHttpAuthRuntimeConfig");

// src/runtimeExtensions.ts
var resolveRuntimeExtensions = /* @__PURE__ */ __name((runtimeConfig, extensions) => {
  const extensionConfiguration = Object.assign(
    (0, import_region_config_resolver.getAwsRegionExtensionConfiguration)(runtimeConfig),
    (0, import_smithy_client.getDefaultExtensionConfiguration)(runtimeConfig),
    (0, import_protocol_http.getHttpHandlerExtensionConfiguration)(runtimeConfig),
    getHttpAuthExtensionConfiguration(runtimeConfig)
  );
  extensions.forEach((extension) => extension.configure(extensionConfiguration));
  return Object.assign(
    runtimeConfig,
    (0, import_region_config_resolver.resolveAwsRegionExtensionConfiguration)(extensionConfiguration),
    (0, import_smithy_client.resolveDefaultRuntimeConfig)(extensionConfiguration),
    (0, import_protocol_http.resolveHttpHandlerRuntimeConfig)(extensionConfiguration),
    resolveHttpAuthRuntimeConfig(extensionConfiguration)
  );
}, "resolveRuntimeExtensions");

// src/KinesisVideoClient.ts
var KinesisVideoClient = class extends import_smithy_client.Client {
  static {
    __name(this, "KinesisVideoClient");
  }
  /**
   * The resolved configuration of KinesisVideoClient class. This is resolved and normalized from the {@link KinesisVideoClientConfig | constructor configuration interface}.
   */
  config;
  constructor(...[configuration]) {
    const _config_0 = (0, import_runtimeConfig.getRuntimeConfig)(configuration || {});
    super(_config_0);
    this.initConfig = _config_0;
    const _config_1 = resolveClientEndpointParameters(_config_0);
    const _config_2 = (0, import_middleware_user_agent.resolveUserAgentConfig)(_config_1);
    const _config_3 = (0, import_middleware_retry.resolveRetryConfig)(_config_2);
    const _config_4 = (0, import_config_resolver.resolveRegionConfig)(_config_3);
    const _config_5 = (0, import_middleware_host_header.resolveHostHeaderConfig)(_config_4);
    const _config_6 = (0, import_middleware_endpoint.resolveEndpointConfig)(_config_5);
    const _config_7 = (0, import_httpAuthSchemeProvider.resolveHttpAuthSchemeConfig)(_config_6);
    const _config_8 = resolveRuntimeExtensions(_config_7, configuration?.extensions || []);
    this.config = _config_8;
    this.middlewareStack.use((0, import_middleware_user_agent.getUserAgentPlugin)(this.config));
    this.middlewareStack.use((0, import_middleware_retry.getRetryPlugin)(this.config));
    this.middlewareStack.use((0, import_middleware_content_length.getContentLengthPlugin)(this.config));
    this.middlewareStack.use((0, import_middleware_host_header.getHostHeaderPlugin)(this.config));
    this.middlewareStack.use((0, import_middleware_logger.getLoggerPlugin)(this.config));
    this.middlewareStack.use((0, import_middleware_recursion_detection.getRecursionDetectionPlugin)(this.config));
    this.middlewareStack.use(
      (0, import_core.getHttpAuthSchemeEndpointRuleSetPlugin)(this.config, {
        httpAuthSchemeParametersProvider: import_httpAuthSchemeProvider.defaultKinesisVideoHttpAuthSchemeParametersProvider,
        identityProviderConfigProvider: /* @__PURE__ */ __name(async (config) => new import_core.DefaultIdentityProviderConfig({
          "aws.auth#sigv4": config.credentials
        }), "identityProviderConfigProvider")
      })
    );
    this.middlewareStack.use((0, import_core.getHttpSigningPlugin)(this.config));
  }
  /**
   * Destroy underlying resources, like sockets. It's usually not necessary to do this.
   * However in Node.js, it's best to explicitly shut down the client's agent when it is no longer needed.
   * Otherwise, sockets might stay open for quite a long time before the server terminates them.
   */
  destroy() {
    super.destroy();
  }
};

// src/KinesisVideo.ts


// src/commands/CreateSignalingChannelCommand.ts

var import_middleware_serde = require("@smithy/middleware-serde");


// src/protocols/Aws_restJson1.ts
var import_core2 = require("@aws-sdk/core");



// src/models/KinesisVideoServiceException.ts

var KinesisVideoServiceException = class _KinesisVideoServiceException extends import_smithy_client.ServiceException {
  static {
    __name(this, "KinesisVideoServiceException");
  }
  /**
   * @internal
   */
  constructor(options) {
    super(options);
    Object.setPrototypeOf(this, _KinesisVideoServiceException.prototype);
  }
};

// src/models/models_0.ts

var AccessDeniedException = class _AccessDeniedException extends KinesisVideoServiceException {
  static {
    __name(this, "AccessDeniedException");
  }
  name = "AccessDeniedException";
  $fault = "client";
  Message;
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "AccessDeniedException",
      $fault: "client",
      ...opts
    });
    Object.setPrototypeOf(this, _AccessDeniedException.prototype);
    this.Message = opts.Message;
  }
};
var AccountChannelLimitExceededException = class _AccountChannelLimitExceededException extends KinesisVideoServiceException {
  static {
    __name(this, "AccountChannelLimitExceededException");
  }
  name = "AccountChannelLimitExceededException";
  $fault = "client";
  Message;
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "AccountChannelLimitExceededException",
      $fault: "client",
      ...opts
    });
    Object.setPrototypeOf(this, _AccountChannelLimitExceededException.prototype);
    this.Message = opts.Message;
  }
};
var AccountStreamLimitExceededException = class _AccountStreamLimitExceededException extends KinesisVideoServiceException {
  static {
    __name(this, "AccountStreamLimitExceededException");
  }
  name = "AccountStreamLimitExceededException";
  $fault = "client";
  Message;
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "AccountStreamLimitExceededException",
      $fault: "client",
      ...opts
    });
    Object.setPrototypeOf(this, _AccountStreamLimitExceededException.prototype);
    this.Message = opts.Message;
  }
};
var APIName = {
  GET_CLIP: "GET_CLIP",
  GET_DASH_STREAMING_SESSION_URL: "GET_DASH_STREAMING_SESSION_URL",
  GET_HLS_STREAMING_SESSION_URL: "GET_HLS_STREAMING_SESSION_URL",
  GET_IMAGES: "GET_IMAGES",
  GET_MEDIA: "GET_MEDIA",
  GET_MEDIA_FOR_FRAGMENT_LIST: "GET_MEDIA_FOR_FRAGMENT_LIST",
  LIST_FRAGMENTS: "LIST_FRAGMENTS",
  PUT_MEDIA: "PUT_MEDIA"
};
var Status = {
  ACTIVE: "ACTIVE",
  CREATING: "CREATING",
  DELETING: "DELETING",
  UPDATING: "UPDATING"
};
var ChannelType = {
  FULL_MESH: "FULL_MESH",
  SINGLE_MASTER: "SINGLE_MASTER"
};
var ComparisonOperator = {
  BEGINS_WITH: "BEGINS_WITH"
};
var ChannelProtocol = {
  HTTPS: "HTTPS",
  WEBRTC: "WEBRTC",
  WSS: "WSS"
};
var ChannelRole = {
  MASTER: "MASTER",
  VIEWER: "VIEWER"
};
var ClientLimitExceededException = class _ClientLimitExceededException extends KinesisVideoServiceException {
  static {
    __name(this, "ClientLimitExceededException");
  }
  name = "ClientLimitExceededException";
  $fault = "client";
  Message;
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "ClientLimitExceededException",
      $fault: "client",
      ...opts
    });
    Object.setPrototypeOf(this, _ClientLimitExceededException.prototype);
    this.Message = opts.Message;
  }
};
var ConfigurationStatus = {
  DISABLED: "DISABLED",
  ENABLED: "ENABLED"
};
var InvalidArgumentException = class _InvalidArgumentException extends KinesisVideoServiceException {
  static {
    __name(this, "InvalidArgumentException");
  }
  name = "InvalidArgumentException";
  $fault = "client";
  Message;
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "InvalidArgumentException",
      $fault: "client",
      ...opts
    });
    Object.setPrototypeOf(this, _InvalidArgumentException.prototype);
    this.Message = opts.Message;
  }
};
var ResourceInUseException = class _ResourceInUseException extends KinesisVideoServiceException {
  static {
    __name(this, "ResourceInUseException");
  }
  name = "ResourceInUseException";
  $fault = "client";
  Message;
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "ResourceInUseException",
      $fault: "client",
      ...opts
    });
    Object.setPrototypeOf(this, _ResourceInUseException.prototype);
    this.Message = opts.Message;
  }
};
var TagsPerResourceExceededLimitException = class _TagsPerResourceExceededLimitException extends KinesisVideoServiceException {
  static {
    __name(this, "TagsPerResourceExceededLimitException");
  }
  name = "TagsPerResourceExceededLimitException";
  $fault = "client";
  Message;
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "TagsPerResourceExceededLimitException",
      $fault: "client",
      ...opts
    });
    Object.setPrototypeOf(this, _TagsPerResourceExceededLimitException.prototype);
    this.Message = opts.Message;
  }
};
var DeviceStreamLimitExceededException = class _DeviceStreamLimitExceededException extends KinesisVideoServiceException {
  static {
    __name(this, "DeviceStreamLimitExceededException");
  }
  name = "DeviceStreamLimitExceededException";
  $fault = "client";
  Message;
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "DeviceStreamLimitExceededException",
      $fault: "client",
      ...opts
    });
    Object.setPrototypeOf(this, _DeviceStreamLimitExceededException.prototype);
    this.Message = opts.Message;
  }
};
var InvalidDeviceException = class _InvalidDeviceException extends KinesisVideoServiceException {
  static {
    __name(this, "InvalidDeviceException");
  }
  name = "InvalidDeviceException";
  $fault = "client";
  Message;
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "InvalidDeviceException",
      $fault: "client",
      ...opts
    });
    Object.setPrototypeOf(this, _InvalidDeviceException.prototype);
    this.Message = opts.Message;
  }
};
var ResourceNotFoundException = class _ResourceNotFoundException extends KinesisVideoServiceException {
  static {
    __name(this, "ResourceNotFoundException");
  }
  name = "ResourceNotFoundException";
  $fault = "client";
  Message;
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "ResourceNotFoundException",
      $fault: "client",
      ...opts
    });
    Object.setPrototypeOf(this, _ResourceNotFoundException.prototype);
    this.Message = opts.Message;
  }
};
var StreamEdgeConfigurationNotFoundException = class _StreamEdgeConfigurationNotFoundException extends KinesisVideoServiceException {
  static {
    __name(this, "StreamEdgeConfigurationNotFoundException");
  }
  name = "StreamEdgeConfigurationNotFoundException";
  $fault = "client";
  Message;
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "StreamEdgeConfigurationNotFoundException",
      $fault: "client",
      ...opts
    });
    Object.setPrototypeOf(this, _StreamEdgeConfigurationNotFoundException.prototype);
    this.Message = opts.Message;
  }
};
var VersionMismatchException = class _VersionMismatchException extends KinesisVideoServiceException {
  static {
    __name(this, "VersionMismatchException");
  }
  name = "VersionMismatchException";
  $fault = "client";
  Message;
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "VersionMismatchException",
      $fault: "client",
      ...opts
    });
    Object.setPrototypeOf(this, _VersionMismatchException.prototype);
    this.Message = opts.Message;
  }
};
var NotAuthorizedException = class _NotAuthorizedException extends KinesisVideoServiceException {
  static {
    __name(this, "NotAuthorizedException");
  }
  name = "NotAuthorizedException";
  $fault = "client";
  Message;
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "NotAuthorizedException",
      $fault: "client",
      ...opts
    });
    Object.setPrototypeOf(this, _NotAuthorizedException.prototype);
    this.Message = opts.Message;
  }
};
var StrategyOnFullSize = {
  DELETE_OLDEST_MEDIA: "DELETE_OLDEST_MEDIA",
  DENY_NEW_MEDIA: "DENY_NEW_MEDIA"
};
var RecorderStatus = {
  SUCCESS: "SUCCESS",
  SYSTEM_ERROR: "SYSTEM_ERROR",
  USER_ERROR: "USER_ERROR"
};
var UploaderStatus = {
  SUCCESS: "SUCCESS",
  SYSTEM_ERROR: "SYSTEM_ERROR",
  USER_ERROR: "USER_ERROR"
};
var MediaUriType = {
  FILE_URI: "FILE_URI",
  RTSP_URI: "RTSP_URI"
};
var SyncStatus = {
  ACKNOWLEDGED: "ACKNOWLEDGED",
  DELETE_FAILED: "DELETE_FAILED",
  DELETING: "DELETING",
  DELETING_ACKNOWLEDGED: "DELETING_ACKNOWLEDGED",
  IN_SYNC: "IN_SYNC",
  SYNCING: "SYNCING",
  SYNC_FAILED: "SYNC_FAILED"
};
var Format = {
  JPEG: "JPEG",
  PNG: "PNG"
};
var FormatConfigKey = {
  JPEGQuality: "JPEGQuality"
};
var ImageSelectorType = {
  PRODUCER_TIMESTAMP: "PRODUCER_TIMESTAMP",
  SERVER_TIMESTAMP: "SERVER_TIMESTAMP"
};
var MediaStorageConfigurationStatus = {
  DISABLED: "DISABLED",
  ENABLED: "ENABLED"
};
var InvalidResourceFormatException = class _InvalidResourceFormatException extends KinesisVideoServiceException {
  static {
    __name(this, "InvalidResourceFormatException");
  }
  name = "InvalidResourceFormatException";
  $fault = "client";
  Message;
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "InvalidResourceFormatException",
      $fault: "client",
      ...opts
    });
    Object.setPrototypeOf(this, _InvalidResourceFormatException.prototype);
    this.Message = opts.Message;
  }
};
var NoDataRetentionException = class _NoDataRetentionException extends KinesisVideoServiceException {
  static {
    __name(this, "NoDataRetentionException");
  }
  name = "NoDataRetentionException";
  $fault = "client";
  Message;
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "NoDataRetentionException",
      $fault: "client",
      ...opts
    });
    Object.setPrototypeOf(this, _NoDataRetentionException.prototype);
    this.Message = opts.Message;
  }
};
var UpdateDataRetentionOperation = {
  DECREASE_DATA_RETENTION: "DECREASE_DATA_RETENTION",
  INCREASE_DATA_RETENTION: "INCREASE_DATA_RETENTION"
};
var MediaSourceConfigFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.MediaUriSecretArn && { MediaUriSecretArn: import_smithy_client.SENSITIVE_STRING }
}), "MediaSourceConfigFilterSensitiveLog");
var RecorderConfigFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.MediaSourceConfig && { MediaSourceConfig: MediaSourceConfigFilterSensitiveLog(obj.MediaSourceConfig) }
}), "RecorderConfigFilterSensitiveLog");
var EdgeConfigFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.RecorderConfig && { RecorderConfig: RecorderConfigFilterSensitiveLog(obj.RecorderConfig) }
}), "EdgeConfigFilterSensitiveLog");
var DescribeEdgeConfigurationOutputFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.EdgeConfig && { EdgeConfig: EdgeConfigFilterSensitiveLog(obj.EdgeConfig) }
}), "DescribeEdgeConfigurationOutputFilterSensitiveLog");
var ListEdgeAgentConfigurationsEdgeConfigFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.EdgeConfig && { EdgeConfig: EdgeConfigFilterSensitiveLog(obj.EdgeConfig) }
}), "ListEdgeAgentConfigurationsEdgeConfigFilterSensitiveLog");
var ListEdgeAgentConfigurationsOutputFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.EdgeConfigs && {
    EdgeConfigs: obj.EdgeConfigs.map((item) => ListEdgeAgentConfigurationsEdgeConfigFilterSensitiveLog(item))
  }
}), "ListEdgeAgentConfigurationsOutputFilterSensitiveLog");
var StartEdgeConfigurationUpdateInputFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.EdgeConfig && { EdgeConfig: EdgeConfigFilterSensitiveLog(obj.EdgeConfig) }
}), "StartEdgeConfigurationUpdateInputFilterSensitiveLog");
var StartEdgeConfigurationUpdateOutputFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.EdgeConfig && { EdgeConfig: EdgeConfigFilterSensitiveLog(obj.EdgeConfig) }
}), "StartEdgeConfigurationUpdateOutputFilterSensitiveLog");

// src/protocols/Aws_restJson1.ts
var se_CreateSignalingChannelCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/createSignalingChannel");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      ChannelName: [],
      ChannelType: [],
      SingleMasterConfiguration: /* @__PURE__ */ __name((_) => (0, import_smithy_client._json)(_), "SingleMasterConfiguration"),
      Tags: /* @__PURE__ */ __name((_) => (0, import_smithy_client._json)(_), "Tags")
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_CreateSignalingChannelCommand");
var se_CreateStreamCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/createStream");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      DataRetentionInHours: [],
      DeviceName: [],
      KmsKeyId: [],
      MediaType: [],
      StreamName: [],
      Tags: /* @__PURE__ */ __name((_) => (0, import_smithy_client._json)(_), "Tags")
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_CreateStreamCommand");
var se_DeleteEdgeConfigurationCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/deleteEdgeConfiguration");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      StreamARN: [],
      StreamName: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_DeleteEdgeConfigurationCommand");
var se_DeleteSignalingChannelCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/deleteSignalingChannel");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      ChannelARN: [],
      CurrentVersion: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_DeleteSignalingChannelCommand");
var se_DeleteStreamCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/deleteStream");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      CurrentVersion: [],
      StreamARN: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_DeleteStreamCommand");
var se_DescribeEdgeConfigurationCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/describeEdgeConfiguration");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      StreamARN: [],
      StreamName: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_DescribeEdgeConfigurationCommand");
var se_DescribeImageGenerationConfigurationCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/describeImageGenerationConfiguration");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      StreamARN: [],
      StreamName: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_DescribeImageGenerationConfigurationCommand");
var se_DescribeMappedResourceConfigurationCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/describeMappedResourceConfiguration");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      MaxResults: [],
      NextToken: [],
      StreamARN: [],
      StreamName: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_DescribeMappedResourceConfigurationCommand");
var se_DescribeMediaStorageConfigurationCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/describeMediaStorageConfiguration");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      ChannelARN: [],
      ChannelName: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_DescribeMediaStorageConfigurationCommand");
var se_DescribeNotificationConfigurationCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/describeNotificationConfiguration");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      StreamARN: [],
      StreamName: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_DescribeNotificationConfigurationCommand");
var se_DescribeSignalingChannelCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/describeSignalingChannel");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      ChannelARN: [],
      ChannelName: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_DescribeSignalingChannelCommand");
var se_DescribeStreamCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/describeStream");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      StreamARN: [],
      StreamName: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_DescribeStreamCommand");
var se_GetDataEndpointCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/getDataEndpoint");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      APIName: [],
      StreamARN: [],
      StreamName: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_GetDataEndpointCommand");
var se_GetSignalingChannelEndpointCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/getSignalingChannelEndpoint");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      ChannelARN: [],
      SingleMasterChannelEndpointConfiguration: /* @__PURE__ */ __name((_) => (0, import_smithy_client._json)(_), "SingleMasterChannelEndpointConfiguration")
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_GetSignalingChannelEndpointCommand");
var se_ListEdgeAgentConfigurationsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/listEdgeAgentConfigurations");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      HubDeviceArn: [],
      MaxResults: [],
      NextToken: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_ListEdgeAgentConfigurationsCommand");
var se_ListSignalingChannelsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/listSignalingChannels");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      ChannelNameCondition: /* @__PURE__ */ __name((_) => (0, import_smithy_client._json)(_), "ChannelNameCondition"),
      MaxResults: [],
      NextToken: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_ListSignalingChannelsCommand");
var se_ListStreamsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/listStreams");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      MaxResults: [],
      NextToken: [],
      StreamNameCondition: /* @__PURE__ */ __name((_) => (0, import_smithy_client._json)(_), "StreamNameCondition")
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_ListStreamsCommand");
var se_ListTagsForResourceCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/ListTagsForResource");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      NextToken: [],
      ResourceARN: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_ListTagsForResourceCommand");
var se_ListTagsForStreamCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/listTagsForStream");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      NextToken: [],
      StreamARN: [],
      StreamName: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_ListTagsForStreamCommand");
var se_StartEdgeConfigurationUpdateCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/startEdgeConfigurationUpdate");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      EdgeConfig: /* @__PURE__ */ __name((_) => (0, import_smithy_client._json)(_), "EdgeConfig"),
      StreamARN: [],
      StreamName: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_StartEdgeConfigurationUpdateCommand");
var se_TagResourceCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/TagResource");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      ResourceARN: [],
      Tags: /* @__PURE__ */ __name((_) => (0, import_smithy_client._json)(_), "Tags")
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_TagResourceCommand");
var se_TagStreamCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/tagStream");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      StreamARN: [],
      StreamName: [],
      Tags: /* @__PURE__ */ __name((_) => (0, import_smithy_client._json)(_), "Tags")
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_TagStreamCommand");
var se_UntagResourceCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/UntagResource");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      ResourceARN: [],
      TagKeyList: /* @__PURE__ */ __name((_) => (0, import_smithy_client._json)(_), "TagKeyList")
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_UntagResourceCommand");
var se_UntagStreamCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/untagStream");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      StreamARN: [],
      StreamName: [],
      TagKeyList: /* @__PURE__ */ __name((_) => (0, import_smithy_client._json)(_), "TagKeyList")
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_UntagStreamCommand");
var se_UpdateDataRetentionCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/updateDataRetention");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      CurrentVersion: [],
      DataRetentionChangeInHours: [],
      Operation: [],
      StreamARN: [],
      StreamName: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_UpdateDataRetentionCommand");
var se_UpdateImageGenerationConfigurationCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/updateImageGenerationConfiguration");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      ImageGenerationConfiguration: /* @__PURE__ */ __name((_) => (0, import_smithy_client._json)(_), "ImageGenerationConfiguration"),
      StreamARN: [],
      StreamName: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_UpdateImageGenerationConfigurationCommand");
var se_UpdateMediaStorageConfigurationCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/updateMediaStorageConfiguration");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      ChannelARN: [],
      MediaStorageConfiguration: /* @__PURE__ */ __name((_) => (0, import_smithy_client._json)(_), "MediaStorageConfiguration")
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_UpdateMediaStorageConfigurationCommand");
var se_UpdateNotificationConfigurationCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/updateNotificationConfiguration");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      NotificationConfiguration: /* @__PURE__ */ __name((_) => (0, import_smithy_client._json)(_), "NotificationConfiguration"),
      StreamARN: [],
      StreamName: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_UpdateNotificationConfigurationCommand");
var se_UpdateSignalingChannelCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/updateSignalingChannel");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      ChannelARN: [],
      CurrentVersion: [],
      SingleMasterConfiguration: /* @__PURE__ */ __name((_) => (0, import_smithy_client._json)(_), "SingleMasterConfiguration")
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_UpdateSignalingChannelCommand");
var se_UpdateStreamCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/updateStream");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      CurrentVersion: [],
      DeviceName: [],
      MediaType: [],
      StreamARN: [],
      StreamName: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_UpdateStreamCommand");
var de_CreateSignalingChannelCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    ChannelARN: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_CreateSignalingChannelCommand");
var de_CreateStreamCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    StreamARN: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_CreateStreamCommand");
var de_DeleteEdgeConfigurationCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_DeleteEdgeConfigurationCommand");
var de_DeleteSignalingChannelCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_DeleteSignalingChannelCommand");
var de_DeleteStreamCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_DeleteStreamCommand");
var de_DescribeEdgeConfigurationCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    CreationTime: /* @__PURE__ */ __name((_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))), "CreationTime"),
    EdgeAgentStatus: /* @__PURE__ */ __name((_) => de_EdgeAgentStatus(_, context), "EdgeAgentStatus"),
    EdgeConfig: import_smithy_client._json,
    FailedStatusDetails: import_smithy_client.expectString,
    LastUpdatedTime: /* @__PURE__ */ __name((_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))), "LastUpdatedTime"),
    StreamARN: import_smithy_client.expectString,
    StreamName: import_smithy_client.expectString,
    SyncStatus: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_DescribeEdgeConfigurationCommand");
var de_DescribeImageGenerationConfigurationCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    ImageGenerationConfiguration: import_smithy_client._json
  });
  Object.assign(contents, doc);
  return contents;
}, "de_DescribeImageGenerationConfigurationCommand");
var de_DescribeMappedResourceConfigurationCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    MappedResourceConfigurationList: import_smithy_client._json,
    NextToken: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_DescribeMappedResourceConfigurationCommand");
var de_DescribeMediaStorageConfigurationCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    MediaStorageConfiguration: import_smithy_client._json
  });
  Object.assign(contents, doc);
  return contents;
}, "de_DescribeMediaStorageConfigurationCommand");
var de_DescribeNotificationConfigurationCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    NotificationConfiguration: import_smithy_client._json
  });
  Object.assign(contents, doc);
  return contents;
}, "de_DescribeNotificationConfigurationCommand");
var de_DescribeSignalingChannelCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    ChannelInfo: /* @__PURE__ */ __name((_) => de_ChannelInfo(_, context), "ChannelInfo")
  });
  Object.assign(contents, doc);
  return contents;
}, "de_DescribeSignalingChannelCommand");
var de_DescribeStreamCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    StreamInfo: /* @__PURE__ */ __name((_) => de_StreamInfo(_, context), "StreamInfo")
  });
  Object.assign(contents, doc);
  return contents;
}, "de_DescribeStreamCommand");
var de_GetDataEndpointCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    DataEndpoint: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_GetDataEndpointCommand");
var de_GetSignalingChannelEndpointCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    ResourceEndpointList: import_smithy_client._json
  });
  Object.assign(contents, doc);
  return contents;
}, "de_GetSignalingChannelEndpointCommand");
var de_ListEdgeAgentConfigurationsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    EdgeConfigs: /* @__PURE__ */ __name((_) => de_ListEdgeAgentConfigurationsEdgeConfigList(_, context), "EdgeConfigs"),
    NextToken: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_ListEdgeAgentConfigurationsCommand");
var de_ListSignalingChannelsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    ChannelInfoList: /* @__PURE__ */ __name((_) => de_ChannelInfoList(_, context), "ChannelInfoList"),
    NextToken: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_ListSignalingChannelsCommand");
var de_ListStreamsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    NextToken: import_smithy_client.expectString,
    StreamInfoList: /* @__PURE__ */ __name((_) => de_StreamInfoList(_, context), "StreamInfoList")
  });
  Object.assign(contents, doc);
  return contents;
}, "de_ListStreamsCommand");
var de_ListTagsForResourceCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    NextToken: import_smithy_client.expectString,
    Tags: import_smithy_client._json
  });
  Object.assign(contents, doc);
  return contents;
}, "de_ListTagsForResourceCommand");
var de_ListTagsForStreamCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    NextToken: import_smithy_client.expectString,
    Tags: import_smithy_client._json
  });
  Object.assign(contents, doc);
  return contents;
}, "de_ListTagsForStreamCommand");
var de_StartEdgeConfigurationUpdateCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    CreationTime: /* @__PURE__ */ __name((_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))), "CreationTime"),
    EdgeConfig: import_smithy_client._json,
    FailedStatusDetails: import_smithy_client.expectString,
    LastUpdatedTime: /* @__PURE__ */ __name((_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))), "LastUpdatedTime"),
    StreamARN: import_smithy_client.expectString,
    StreamName: import_smithy_client.expectString,
    SyncStatus: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_StartEdgeConfigurationUpdateCommand");
var de_TagResourceCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_TagResourceCommand");
var de_TagStreamCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_TagStreamCommand");
var de_UntagResourceCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_UntagResourceCommand");
var de_UntagStreamCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_UntagStreamCommand");
var de_UpdateDataRetentionCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_UpdateDataRetentionCommand");
var de_UpdateImageGenerationConfigurationCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_UpdateImageGenerationConfigurationCommand");
var de_UpdateMediaStorageConfigurationCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_UpdateMediaStorageConfigurationCommand");
var de_UpdateNotificationConfigurationCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_UpdateNotificationConfigurationCommand");
var de_UpdateSignalingChannelCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_UpdateSignalingChannelCommand");
var de_UpdateStreamCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_UpdateStreamCommand");
var de_CommandError = /* @__PURE__ */ __name(async (output, context) => {
  const parsedOutput = {
    ...output,
    body: await (0, import_core2.parseJsonErrorBody)(output.body, context)
  };
  const errorCode = (0, import_core2.loadRestJsonErrorCode)(output, parsedOutput.body);
  switch (errorCode) {
    case "AccessDeniedException":
    case "com.amazonaws.kinesisvideo#AccessDeniedException":
      throw await de_AccessDeniedExceptionRes(parsedOutput, context);
    case "AccountChannelLimitExceededException":
    case "com.amazonaws.kinesisvideo#AccountChannelLimitExceededException":
      throw await de_AccountChannelLimitExceededExceptionRes(parsedOutput, context);
    case "ClientLimitExceededException":
    case "com.amazonaws.kinesisvideo#ClientLimitExceededException":
      throw await de_ClientLimitExceededExceptionRes(parsedOutput, context);
    case "InvalidArgumentException":
    case "com.amazonaws.kinesisvideo#InvalidArgumentException":
      throw await de_InvalidArgumentExceptionRes(parsedOutput, context);
    case "ResourceInUseException":
    case "com.amazonaws.kinesisvideo#ResourceInUseException":
      throw await de_ResourceInUseExceptionRes(parsedOutput, context);
    case "TagsPerResourceExceededLimitException":
    case "com.amazonaws.kinesisvideo#TagsPerResourceExceededLimitException":
      throw await de_TagsPerResourceExceededLimitExceptionRes(parsedOutput, context);
    case "AccountStreamLimitExceededException":
    case "com.amazonaws.kinesisvideo#AccountStreamLimitExceededException":
      throw await de_AccountStreamLimitExceededExceptionRes(parsedOutput, context);
    case "DeviceStreamLimitExceededException":
    case "com.amazonaws.kinesisvideo#DeviceStreamLimitExceededException":
      throw await de_DeviceStreamLimitExceededExceptionRes(parsedOutput, context);
    case "InvalidDeviceException":
    case "com.amazonaws.kinesisvideo#InvalidDeviceException":
      throw await de_InvalidDeviceExceptionRes(parsedOutput, context);
    case "ResourceNotFoundException":
    case "com.amazonaws.kinesisvideo#ResourceNotFoundException":
      throw await de_ResourceNotFoundExceptionRes(parsedOutput, context);
    case "StreamEdgeConfigurationNotFoundException":
    case "com.amazonaws.kinesisvideo#StreamEdgeConfigurationNotFoundException":
      throw await de_StreamEdgeConfigurationNotFoundExceptionRes(parsedOutput, context);
    case "VersionMismatchException":
    case "com.amazonaws.kinesisvideo#VersionMismatchException":
      throw await de_VersionMismatchExceptionRes(parsedOutput, context);
    case "NotAuthorizedException":
    case "com.amazonaws.kinesisvideo#NotAuthorizedException":
      throw await de_NotAuthorizedExceptionRes(parsedOutput, context);
    case "InvalidResourceFormatException":
    case "com.amazonaws.kinesisvideo#InvalidResourceFormatException":
      throw await de_InvalidResourceFormatExceptionRes(parsedOutput, context);
    case "NoDataRetentionException":
    case "com.amazonaws.kinesisvideo#NoDataRetentionException":
      throw await de_NoDataRetentionExceptionRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      return throwDefaultError({
        output,
        parsedBody,
        errorCode
      });
  }
}, "de_CommandError");
var throwDefaultError = (0, import_smithy_client.withBaseException)(KinesisVideoServiceException);
var de_AccessDeniedExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    Message: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new AccessDeniedException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_AccessDeniedExceptionRes");
var de_AccountChannelLimitExceededExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    Message: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new AccountChannelLimitExceededException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_AccountChannelLimitExceededExceptionRes");
var de_AccountStreamLimitExceededExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    Message: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new AccountStreamLimitExceededException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_AccountStreamLimitExceededExceptionRes");
var de_ClientLimitExceededExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    Message: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new ClientLimitExceededException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_ClientLimitExceededExceptionRes");
var de_DeviceStreamLimitExceededExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    Message: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new DeviceStreamLimitExceededException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_DeviceStreamLimitExceededExceptionRes");
var de_InvalidArgumentExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    Message: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new InvalidArgumentException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_InvalidArgumentExceptionRes");
var de_InvalidDeviceExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    Message: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new InvalidDeviceException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_InvalidDeviceExceptionRes");
var de_InvalidResourceFormatExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    Message: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new InvalidResourceFormatException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_InvalidResourceFormatExceptionRes");
var de_NoDataRetentionExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    Message: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new NoDataRetentionException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_NoDataRetentionExceptionRes");
var de_NotAuthorizedExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    Message: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new NotAuthorizedException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_NotAuthorizedExceptionRes");
var de_ResourceInUseExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    Message: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new ResourceInUseException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_ResourceInUseExceptionRes");
var de_ResourceNotFoundExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    Message: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new ResourceNotFoundException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_ResourceNotFoundExceptionRes");
var de_StreamEdgeConfigurationNotFoundExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    Message: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new StreamEdgeConfigurationNotFoundException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_StreamEdgeConfigurationNotFoundExceptionRes");
var de_TagsPerResourceExceededLimitExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    Message: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new TagsPerResourceExceededLimitException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_TagsPerResourceExceededLimitExceptionRes");
var de_VersionMismatchExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    Message: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new VersionMismatchException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_VersionMismatchExceptionRes");
var de_ChannelInfo = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    ChannelARN: import_smithy_client.expectString,
    ChannelName: import_smithy_client.expectString,
    ChannelStatus: import_smithy_client.expectString,
    ChannelType: import_smithy_client.expectString,
    CreationTime: /* @__PURE__ */ __name((_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))), "CreationTime"),
    SingleMasterConfiguration: import_smithy_client._json,
    Version: import_smithy_client.expectString
  });
}, "de_ChannelInfo");
var de_ChannelInfoList = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_ChannelInfo(entry, context);
  });
  return retVal;
}, "de_ChannelInfoList");
var de_EdgeAgentStatus = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    LastRecorderStatus: /* @__PURE__ */ __name((_) => de_LastRecorderStatus(_, context), "LastRecorderStatus"),
    LastUploaderStatus: /* @__PURE__ */ __name((_) => de_LastUploaderStatus(_, context), "LastUploaderStatus")
  });
}, "de_EdgeAgentStatus");
var de_LastRecorderStatus = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    JobStatusDetails: import_smithy_client.expectString,
    LastCollectedTime: /* @__PURE__ */ __name((_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))), "LastCollectedTime"),
    LastUpdatedTime: /* @__PURE__ */ __name((_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))), "LastUpdatedTime"),
    RecorderStatus: import_smithy_client.expectString
  });
}, "de_LastRecorderStatus");
var de_LastUploaderStatus = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    JobStatusDetails: import_smithy_client.expectString,
    LastCollectedTime: /* @__PURE__ */ __name((_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))), "LastCollectedTime"),
    LastUpdatedTime: /* @__PURE__ */ __name((_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))), "LastUpdatedTime"),
    UploaderStatus: import_smithy_client.expectString
  });
}, "de_LastUploaderStatus");
var de_ListEdgeAgentConfigurationsEdgeConfig = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    CreationTime: /* @__PURE__ */ __name((_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))), "CreationTime"),
    EdgeConfig: import_smithy_client._json,
    FailedStatusDetails: import_smithy_client.expectString,
    LastUpdatedTime: /* @__PURE__ */ __name((_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))), "LastUpdatedTime"),
    StreamARN: import_smithy_client.expectString,
    StreamName: import_smithy_client.expectString,
    SyncStatus: import_smithy_client.expectString
  });
}, "de_ListEdgeAgentConfigurationsEdgeConfig");
var de_ListEdgeAgentConfigurationsEdgeConfigList = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_ListEdgeAgentConfigurationsEdgeConfig(entry, context);
  });
  return retVal;
}, "de_ListEdgeAgentConfigurationsEdgeConfigList");
var de_StreamInfo = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    CreationTime: /* @__PURE__ */ __name((_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))), "CreationTime"),
    DataRetentionInHours: import_smithy_client.expectInt32,
    DeviceName: import_smithy_client.expectString,
    KmsKeyId: import_smithy_client.expectString,
    MediaType: import_smithy_client.expectString,
    Status: import_smithy_client.expectString,
    StreamARN: import_smithy_client.expectString,
    StreamName: import_smithy_client.expectString,
    Version: import_smithy_client.expectString
  });
}, "de_StreamInfo");
var de_StreamInfoList = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_StreamInfo(entry, context);
  });
  return retVal;
}, "de_StreamInfoList");
var deserializeMetadata = /* @__PURE__ */ __name((output) => ({
  httpStatusCode: output.statusCode,
  requestId: output.headers["x-amzn-requestid"] ?? output.headers["x-amzn-request-id"] ?? output.headers["x-amz-request-id"],
  extendedRequestId: output.headers["x-amz-id-2"],
  cfId: output.headers["x-amz-cf-id"]
}), "deserializeMetadata");

// src/commands/CreateSignalingChannelCommand.ts
var CreateSignalingChannelCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("KinesisVideo_20170930", "CreateSignalingChannel", {}).n("KinesisVideoClient", "CreateSignalingChannelCommand").f(void 0, void 0).ser(se_CreateSignalingChannelCommand).de(de_CreateSignalingChannelCommand).build() {
  static {
    __name(this, "CreateSignalingChannelCommand");
  }
};

// src/commands/CreateStreamCommand.ts



var CreateStreamCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("KinesisVideo_20170930", "CreateStream", {}).n("KinesisVideoClient", "CreateStreamCommand").f(void 0, void 0).ser(se_CreateStreamCommand).de(de_CreateStreamCommand).build() {
  static {
    __name(this, "CreateStreamCommand");
  }
};

// src/commands/DeleteEdgeConfigurationCommand.ts



var DeleteEdgeConfigurationCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("KinesisVideo_20170930", "DeleteEdgeConfiguration", {}).n("KinesisVideoClient", "DeleteEdgeConfigurationCommand").f(void 0, void 0).ser(se_DeleteEdgeConfigurationCommand).de(de_DeleteEdgeConfigurationCommand).build() {
  static {
    __name(this, "DeleteEdgeConfigurationCommand");
  }
};

// src/commands/DeleteSignalingChannelCommand.ts



var DeleteSignalingChannelCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("KinesisVideo_20170930", "DeleteSignalingChannel", {}).n("KinesisVideoClient", "DeleteSignalingChannelCommand").f(void 0, void 0).ser(se_DeleteSignalingChannelCommand).de(de_DeleteSignalingChannelCommand).build() {
  static {
    __name(this, "DeleteSignalingChannelCommand");
  }
};

// src/commands/DeleteStreamCommand.ts



var DeleteStreamCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("KinesisVideo_20170930", "DeleteStream", {}).n("KinesisVideoClient", "DeleteStreamCommand").f(void 0, void 0).ser(se_DeleteStreamCommand).de(de_DeleteStreamCommand).build() {
  static {
    __name(this, "DeleteStreamCommand");
  }
};

// src/commands/DescribeEdgeConfigurationCommand.ts



var DescribeEdgeConfigurationCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("KinesisVideo_20170930", "DescribeEdgeConfiguration", {}).n("KinesisVideoClient", "DescribeEdgeConfigurationCommand").f(void 0, DescribeEdgeConfigurationOutputFilterSensitiveLog).ser(se_DescribeEdgeConfigurationCommand).de(de_DescribeEdgeConfigurationCommand).build() {
  static {
    __name(this, "DescribeEdgeConfigurationCommand");
  }
};

// src/commands/DescribeImageGenerationConfigurationCommand.ts



var DescribeImageGenerationConfigurationCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("KinesisVideo_20170930", "DescribeImageGenerationConfiguration", {}).n("KinesisVideoClient", "DescribeImageGenerationConfigurationCommand").f(void 0, void 0).ser(se_DescribeImageGenerationConfigurationCommand).de(de_DescribeImageGenerationConfigurationCommand).build() {
  static {
    __name(this, "DescribeImageGenerationConfigurationCommand");
  }
};

// src/commands/DescribeMappedResourceConfigurationCommand.ts



var DescribeMappedResourceConfigurationCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("KinesisVideo_20170930", "DescribeMappedResourceConfiguration", {}).n("KinesisVideoClient", "DescribeMappedResourceConfigurationCommand").f(void 0, void 0).ser(se_DescribeMappedResourceConfigurationCommand).de(de_DescribeMappedResourceConfigurationCommand).build() {
  static {
    __name(this, "DescribeMappedResourceConfigurationCommand");
  }
};

// src/commands/DescribeMediaStorageConfigurationCommand.ts



var DescribeMediaStorageConfigurationCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("KinesisVideo_20170930", "DescribeMediaStorageConfiguration", {}).n("KinesisVideoClient", "DescribeMediaStorageConfigurationCommand").f(void 0, void 0).ser(se_DescribeMediaStorageConfigurationCommand).de(de_DescribeMediaStorageConfigurationCommand).build() {
  static {
    __name(this, "DescribeMediaStorageConfigurationCommand");
  }
};

// src/commands/DescribeNotificationConfigurationCommand.ts



var DescribeNotificationConfigurationCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("KinesisVideo_20170930", "DescribeNotificationConfiguration", {}).n("KinesisVideoClient", "DescribeNotificationConfigurationCommand").f(void 0, void 0).ser(se_DescribeNotificationConfigurationCommand).de(de_DescribeNotificationConfigurationCommand).build() {
  static {
    __name(this, "DescribeNotificationConfigurationCommand");
  }
};

// src/commands/DescribeSignalingChannelCommand.ts



var DescribeSignalingChannelCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("KinesisVideo_20170930", "DescribeSignalingChannel", {}).n("KinesisVideoClient", "DescribeSignalingChannelCommand").f(void 0, void 0).ser(se_DescribeSignalingChannelCommand).de(de_DescribeSignalingChannelCommand).build() {
  static {
    __name(this, "DescribeSignalingChannelCommand");
  }
};

// src/commands/DescribeStreamCommand.ts



var DescribeStreamCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("KinesisVideo_20170930", "DescribeStream", {}).n("KinesisVideoClient", "DescribeStreamCommand").f(void 0, void 0).ser(se_DescribeStreamCommand).de(de_DescribeStreamCommand).build() {
  static {
    __name(this, "DescribeStreamCommand");
  }
};

// src/commands/GetDataEndpointCommand.ts



var GetDataEndpointCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("KinesisVideo_20170930", "GetDataEndpoint", {}).n("KinesisVideoClient", "GetDataEndpointCommand").f(void 0, void 0).ser(se_GetDataEndpointCommand).de(de_GetDataEndpointCommand).build() {
  static {
    __name(this, "GetDataEndpointCommand");
  }
};

// src/commands/GetSignalingChannelEndpointCommand.ts



var GetSignalingChannelEndpointCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("KinesisVideo_20170930", "GetSignalingChannelEndpoint", {}).n("KinesisVideoClient", "GetSignalingChannelEndpointCommand").f(void 0, void 0).ser(se_GetSignalingChannelEndpointCommand).de(de_GetSignalingChannelEndpointCommand).build() {
  static {
    __name(this, "GetSignalingChannelEndpointCommand");
  }
};

// src/commands/ListEdgeAgentConfigurationsCommand.ts



var ListEdgeAgentConfigurationsCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("KinesisVideo_20170930", "ListEdgeAgentConfigurations", {}).n("KinesisVideoClient", "ListEdgeAgentConfigurationsCommand").f(void 0, ListEdgeAgentConfigurationsOutputFilterSensitiveLog).ser(se_ListEdgeAgentConfigurationsCommand).de(de_ListEdgeAgentConfigurationsCommand).build() {
  static {
    __name(this, "ListEdgeAgentConfigurationsCommand");
  }
};

// src/commands/ListSignalingChannelsCommand.ts



var ListSignalingChannelsCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("KinesisVideo_20170930", "ListSignalingChannels", {}).n("KinesisVideoClient", "ListSignalingChannelsCommand").f(void 0, void 0).ser(se_ListSignalingChannelsCommand).de(de_ListSignalingChannelsCommand).build() {
  static {
    __name(this, "ListSignalingChannelsCommand");
  }
};

// src/commands/ListStreamsCommand.ts



var ListStreamsCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("KinesisVideo_20170930", "ListStreams", {}).n("KinesisVideoClient", "ListStreamsCommand").f(void 0, void 0).ser(se_ListStreamsCommand).de(de_ListStreamsCommand).build() {
  static {
    __name(this, "ListStreamsCommand");
  }
};

// src/commands/ListTagsForResourceCommand.ts



var ListTagsForResourceCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("KinesisVideo_20170930", "ListTagsForResource", {}).n("KinesisVideoClient", "ListTagsForResourceCommand").f(void 0, void 0).ser(se_ListTagsForResourceCommand).de(de_ListTagsForResourceCommand).build() {
  static {
    __name(this, "ListTagsForResourceCommand");
  }
};

// src/commands/ListTagsForStreamCommand.ts



var ListTagsForStreamCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("KinesisVideo_20170930", "ListTagsForStream", {}).n("KinesisVideoClient", "ListTagsForStreamCommand").f(void 0, void 0).ser(se_ListTagsForStreamCommand).de(de_ListTagsForStreamCommand).build() {
  static {
    __name(this, "ListTagsForStreamCommand");
  }
};

// src/commands/StartEdgeConfigurationUpdateCommand.ts



var StartEdgeConfigurationUpdateCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("KinesisVideo_20170930", "StartEdgeConfigurationUpdate", {}).n("KinesisVideoClient", "StartEdgeConfigurationUpdateCommand").f(StartEdgeConfigurationUpdateInputFilterSensitiveLog, StartEdgeConfigurationUpdateOutputFilterSensitiveLog).ser(se_StartEdgeConfigurationUpdateCommand).de(de_StartEdgeConfigurationUpdateCommand).build() {
  static {
    __name(this, "StartEdgeConfigurationUpdateCommand");
  }
};

// src/commands/TagResourceCommand.ts



var TagResourceCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("KinesisVideo_20170930", "TagResource", {}).n("KinesisVideoClient", "TagResourceCommand").f(void 0, void 0).ser(se_TagResourceCommand).de(de_TagResourceCommand).build() {
  static {
    __name(this, "TagResourceCommand");
  }
};

// src/commands/TagStreamCommand.ts



var TagStreamCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("KinesisVideo_20170930", "TagStream", {}).n("KinesisVideoClient", "TagStreamCommand").f(void 0, void 0).ser(se_TagStreamCommand).de(de_TagStreamCommand).build() {
  static {
    __name(this, "TagStreamCommand");
  }
};

// src/commands/UntagResourceCommand.ts



var UntagResourceCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("KinesisVideo_20170930", "UntagResource", {}).n("KinesisVideoClient", "UntagResourceCommand").f(void 0, void 0).ser(se_UntagResourceCommand).de(de_UntagResourceCommand).build() {
  static {
    __name(this, "UntagResourceCommand");
  }
};

// src/commands/UntagStreamCommand.ts



var UntagStreamCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("KinesisVideo_20170930", "UntagStream", {}).n("KinesisVideoClient", "UntagStreamCommand").f(void 0, void 0).ser(se_UntagStreamCommand).de(de_UntagStreamCommand).build() {
  static {
    __name(this, "UntagStreamCommand");
  }
};

// src/commands/UpdateDataRetentionCommand.ts



var UpdateDataRetentionCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("KinesisVideo_20170930", "UpdateDataRetention", {}).n("KinesisVideoClient", "UpdateDataRetentionCommand").f(void 0, void 0).ser(se_UpdateDataRetentionCommand).de(de_UpdateDataRetentionCommand).build() {
  static {
    __name(this, "UpdateDataRetentionCommand");
  }
};

// src/commands/UpdateImageGenerationConfigurationCommand.ts



var UpdateImageGenerationConfigurationCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("KinesisVideo_20170930", "UpdateImageGenerationConfiguration", {}).n("KinesisVideoClient", "UpdateImageGenerationConfigurationCommand").f(void 0, void 0).ser(se_UpdateImageGenerationConfigurationCommand).de(de_UpdateImageGenerationConfigurationCommand).build() {
  static {
    __name(this, "UpdateImageGenerationConfigurationCommand");
  }
};

// src/commands/UpdateMediaStorageConfigurationCommand.ts



var UpdateMediaStorageConfigurationCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("KinesisVideo_20170930", "UpdateMediaStorageConfiguration", {}).n("KinesisVideoClient", "UpdateMediaStorageConfigurationCommand").f(void 0, void 0).ser(se_UpdateMediaStorageConfigurationCommand).de(de_UpdateMediaStorageConfigurationCommand).build() {
  static {
    __name(this, "UpdateMediaStorageConfigurationCommand");
  }
};

// src/commands/UpdateNotificationConfigurationCommand.ts



var UpdateNotificationConfigurationCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("KinesisVideo_20170930", "UpdateNotificationConfiguration", {}).n("KinesisVideoClient", "UpdateNotificationConfigurationCommand").f(void 0, void 0).ser(se_UpdateNotificationConfigurationCommand).de(de_UpdateNotificationConfigurationCommand).build() {
  static {
    __name(this, "UpdateNotificationConfigurationCommand");
  }
};

// src/commands/UpdateSignalingChannelCommand.ts



var UpdateSignalingChannelCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("KinesisVideo_20170930", "UpdateSignalingChannel", {}).n("KinesisVideoClient", "UpdateSignalingChannelCommand").f(void 0, void 0).ser(se_UpdateSignalingChannelCommand).de(de_UpdateSignalingChannelCommand).build() {
  static {
    __name(this, "UpdateSignalingChannelCommand");
  }
};

// src/commands/UpdateStreamCommand.ts



var UpdateStreamCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("KinesisVideo_20170930", "UpdateStream", {}).n("KinesisVideoClient", "UpdateStreamCommand").f(void 0, void 0).ser(se_UpdateStreamCommand).de(de_UpdateStreamCommand).build() {
  static {
    __name(this, "UpdateStreamCommand");
  }
};

// src/KinesisVideo.ts
var commands = {
  CreateSignalingChannelCommand,
  CreateStreamCommand,
  DeleteEdgeConfigurationCommand,
  DeleteSignalingChannelCommand,
  DeleteStreamCommand,
  DescribeEdgeConfigurationCommand,
  DescribeImageGenerationConfigurationCommand,
  DescribeMappedResourceConfigurationCommand,
  DescribeMediaStorageConfigurationCommand,
  DescribeNotificationConfigurationCommand,
  DescribeSignalingChannelCommand,
  DescribeStreamCommand,
  GetDataEndpointCommand,
  GetSignalingChannelEndpointCommand,
  ListEdgeAgentConfigurationsCommand,
  ListSignalingChannelsCommand,
  ListStreamsCommand,
  ListTagsForResourceCommand,
  ListTagsForStreamCommand,
  StartEdgeConfigurationUpdateCommand,
  TagResourceCommand,
  TagStreamCommand,
  UntagResourceCommand,
  UntagStreamCommand,
  UpdateDataRetentionCommand,
  UpdateImageGenerationConfigurationCommand,
  UpdateMediaStorageConfigurationCommand,
  UpdateNotificationConfigurationCommand,
  UpdateSignalingChannelCommand,
  UpdateStreamCommand
};
var KinesisVideo = class extends KinesisVideoClient {
  static {
    __name(this, "KinesisVideo");
  }
};
(0, import_smithy_client.createAggregatedClient)(commands, KinesisVideo);

// src/pagination/DescribeMappedResourceConfigurationPaginator.ts

var paginateDescribeMappedResourceConfiguration = (0, import_core.createPaginator)(KinesisVideoClient, DescribeMappedResourceConfigurationCommand, "NextToken", "NextToken", "MaxResults");

// src/pagination/ListEdgeAgentConfigurationsPaginator.ts

var paginateListEdgeAgentConfigurations = (0, import_core.createPaginator)(KinesisVideoClient, ListEdgeAgentConfigurationsCommand, "NextToken", "NextToken", "MaxResults");

// src/pagination/ListSignalingChannelsPaginator.ts

var paginateListSignalingChannels = (0, import_core.createPaginator)(KinesisVideoClient, ListSignalingChannelsCommand, "NextToken", "NextToken", "MaxResults");

// src/pagination/ListStreamsPaginator.ts

var paginateListStreams = (0, import_core.createPaginator)(KinesisVideoClient, ListStreamsCommand, "NextToken", "NextToken", "MaxResults");
// Annotate the CommonJS export names for ESM import in node:

0 && (module.exports = {
  KinesisVideoServiceException,
  __Client,
  KinesisVideoClient,
  KinesisVideo,
  $Command,
  CreateSignalingChannelCommand,
  CreateStreamCommand,
  DeleteEdgeConfigurationCommand,
  DeleteSignalingChannelCommand,
  DeleteStreamCommand,
  DescribeEdgeConfigurationCommand,
  DescribeImageGenerationConfigurationCommand,
  DescribeMappedResourceConfigurationCommand,
  DescribeMediaStorageConfigurationCommand,
  DescribeNotificationConfigurationCommand,
  DescribeSignalingChannelCommand,
  DescribeStreamCommand,
  GetDataEndpointCommand,
  GetSignalingChannelEndpointCommand,
  ListEdgeAgentConfigurationsCommand,
  ListSignalingChannelsCommand,
  ListStreamsCommand,
  ListTagsForResourceCommand,
  ListTagsForStreamCommand,
  StartEdgeConfigurationUpdateCommand,
  TagResourceCommand,
  TagStreamCommand,
  UntagResourceCommand,
  UntagStreamCommand,
  UpdateDataRetentionCommand,
  UpdateImageGenerationConfigurationCommand,
  UpdateMediaStorageConfigurationCommand,
  UpdateNotificationConfigurationCommand,
  UpdateSignalingChannelCommand,
  UpdateStreamCommand,
  paginateDescribeMappedResourceConfiguration,
  paginateListEdgeAgentConfigurations,
  paginateListSignalingChannels,
  paginateListStreams,
  AccessDeniedException,
  AccountChannelLimitExceededException,
  AccountStreamLimitExceededException,
  APIName,
  Status,
  ChannelType,
  ComparisonOperator,
  ChannelProtocol,
  ChannelRole,
  ClientLimitExceededException,
  ConfigurationStatus,
  InvalidArgumentException,
  ResourceInUseException,
  TagsPerResourceExceededLimitException,
  DeviceStreamLimitExceededException,
  InvalidDeviceException,
  ResourceNotFoundException,
  StreamEdgeConfigurationNotFoundException,
  VersionMismatchException,
  NotAuthorizedException,
  StrategyOnFullSize,
  RecorderStatus,
  UploaderStatus,
  MediaUriType,
  SyncStatus,
  Format,
  FormatConfigKey,
  ImageSelectorType,
  MediaStorageConfigurationStatus,
  InvalidResourceFormatException,
  NoDataRetentionException,
  UpdateDataRetentionOperation,
  MediaSourceConfigFilterSensitiveLog,
  RecorderConfigFilterSensitiveLog,
  EdgeConfigFilterSensitiveLog,
  DescribeEdgeConfigurationOutputFilterSensitiveLog,
  ListEdgeAgentConfigurationsEdgeConfigFilterSensitiveLog,
  ListEdgeAgentConfigurationsOutputFilterSensitiveLog,
  StartEdgeConfigurationUpdateInputFilterSensitiveLog,
  StartEdgeConfigurationUpdateOutputFilterSensitiveLog
});


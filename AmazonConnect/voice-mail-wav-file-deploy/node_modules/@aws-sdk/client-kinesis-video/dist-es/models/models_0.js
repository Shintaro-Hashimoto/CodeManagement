import { SENSITIVE_STRING } from "@smithy/smithy-client";
import { KinesisVideoServiceException as __BaseException } from "./KinesisVideoServiceException";
export class AccessDeniedException extends __BaseException {
    name = "AccessDeniedException";
    $fault = "client";
    Message;
    constructor(opts) {
        super({
            name: "AccessDeniedException",
            $fault: "client",
            ...opts,
        });
        Object.setPrototypeOf(this, AccessDeniedException.prototype);
        this.Message = opts.Message;
    }
}
export class AccountChannelLimitExceededException extends __BaseException {
    name = "AccountChannelLimitExceededException";
    $fault = "client";
    Message;
    constructor(opts) {
        super({
            name: "AccountChannelLimitExceededException",
            $fault: "client",
            ...opts,
        });
        Object.setPrototypeOf(this, AccountChannelLimitExceededException.prototype);
        this.Message = opts.Message;
    }
}
export class AccountStreamLimitExceededException extends __BaseException {
    name = "AccountStreamLimitExceededException";
    $fault = "client";
    Message;
    constructor(opts) {
        super({
            name: "AccountStreamLimitExceededException",
            $fault: "client",
            ...opts,
        });
        Object.setPrototypeOf(this, AccountStreamLimitExceededException.prototype);
        this.Message = opts.Message;
    }
}
export const APIName = {
    GET_CLIP: "GET_CLIP",
    GET_DASH_STREAMING_SESSION_URL: "GET_DASH_STREAMING_SESSION_URL",
    GET_HLS_STREAMING_SESSION_URL: "GET_HLS_STREAMING_SESSION_URL",
    GET_IMAGES: "GET_IMAGES",
    GET_MEDIA: "GET_MEDIA",
    GET_MEDIA_FOR_FRAGMENT_LIST: "GET_MEDIA_FOR_FRAGMENT_LIST",
    LIST_FRAGMENTS: "LIST_FRAGMENTS",
    PUT_MEDIA: "PUT_MEDIA",
};
export const Status = {
    ACTIVE: "ACTIVE",
    CREATING: "CREATING",
    DELETING: "DELETING",
    UPDATING: "UPDATING",
};
export const ChannelType = {
    FULL_MESH: "FULL_MESH",
    SINGLE_MASTER: "SINGLE_MASTER",
};
export const ComparisonOperator = {
    BEGINS_WITH: "BEGINS_WITH",
};
export const ChannelProtocol = {
    HTTPS: "HTTPS",
    WEBRTC: "WEBRTC",
    WSS: "WSS",
};
export const ChannelRole = {
    MASTER: "MASTER",
    VIEWER: "VIEWER",
};
export class ClientLimitExceededException extends __BaseException {
    name = "ClientLimitExceededException";
    $fault = "client";
    Message;
    constructor(opts) {
        super({
            name: "ClientLimitExceededException",
            $fault: "client",
            ...opts,
        });
        Object.setPrototypeOf(this, ClientLimitExceededException.prototype);
        this.Message = opts.Message;
    }
}
export const ConfigurationStatus = {
    DISABLED: "DISABLED",
    ENABLED: "ENABLED",
};
export class InvalidArgumentException extends __BaseException {
    name = "InvalidArgumentException";
    $fault = "client";
    Message;
    constructor(opts) {
        super({
            name: "InvalidArgumentException",
            $fault: "client",
            ...opts,
        });
        Object.setPrototypeOf(this, InvalidArgumentException.prototype);
        this.Message = opts.Message;
    }
}
export class ResourceInUseException extends __BaseException {
    name = "ResourceInUseException";
    $fault = "client";
    Message;
    constructor(opts) {
        super({
            name: "ResourceInUseException",
            $fault: "client",
            ...opts,
        });
        Object.setPrototypeOf(this, ResourceInUseException.prototype);
        this.Message = opts.Message;
    }
}
export class TagsPerResourceExceededLimitException extends __BaseException {
    name = "TagsPerResourceExceededLimitException";
    $fault = "client";
    Message;
    constructor(opts) {
        super({
            name: "TagsPerResourceExceededLimitException",
            $fault: "client",
            ...opts,
        });
        Object.setPrototypeOf(this, TagsPerResourceExceededLimitException.prototype);
        this.Message = opts.Message;
    }
}
export class DeviceStreamLimitExceededException extends __BaseException {
    name = "DeviceStreamLimitExceededException";
    $fault = "client";
    Message;
    constructor(opts) {
        super({
            name: "DeviceStreamLimitExceededException",
            $fault: "client",
            ...opts,
        });
        Object.setPrototypeOf(this, DeviceStreamLimitExceededException.prototype);
        this.Message = opts.Message;
    }
}
export class InvalidDeviceException extends __BaseException {
    name = "InvalidDeviceException";
    $fault = "client";
    Message;
    constructor(opts) {
        super({
            name: "InvalidDeviceException",
            $fault: "client",
            ...opts,
        });
        Object.setPrototypeOf(this, InvalidDeviceException.prototype);
        this.Message = opts.Message;
    }
}
export class ResourceNotFoundException extends __BaseException {
    name = "ResourceNotFoundException";
    $fault = "client";
    Message;
    constructor(opts) {
        super({
            name: "ResourceNotFoundException",
            $fault: "client",
            ...opts,
        });
        Object.setPrototypeOf(this, ResourceNotFoundException.prototype);
        this.Message = opts.Message;
    }
}
export class StreamEdgeConfigurationNotFoundException extends __BaseException {
    name = "StreamEdgeConfigurationNotFoundException";
    $fault = "client";
    Message;
    constructor(opts) {
        super({
            name: "StreamEdgeConfigurationNotFoundException",
            $fault: "client",
            ...opts,
        });
        Object.setPrototypeOf(this, StreamEdgeConfigurationNotFoundException.prototype);
        this.Message = opts.Message;
    }
}
export class VersionMismatchException extends __BaseException {
    name = "VersionMismatchException";
    $fault = "client";
    Message;
    constructor(opts) {
        super({
            name: "VersionMismatchException",
            $fault: "client",
            ...opts,
        });
        Object.setPrototypeOf(this, VersionMismatchException.prototype);
        this.Message = opts.Message;
    }
}
export class NotAuthorizedException extends __BaseException {
    name = "NotAuthorizedException";
    $fault = "client";
    Message;
    constructor(opts) {
        super({
            name: "NotAuthorizedException",
            $fault: "client",
            ...opts,
        });
        Object.setPrototypeOf(this, NotAuthorizedException.prototype);
        this.Message = opts.Message;
    }
}
export const StrategyOnFullSize = {
    DELETE_OLDEST_MEDIA: "DELETE_OLDEST_MEDIA",
    DENY_NEW_MEDIA: "DENY_NEW_MEDIA",
};
export const RecorderStatus = {
    SUCCESS: "SUCCESS",
    SYSTEM_ERROR: "SYSTEM_ERROR",
    USER_ERROR: "USER_ERROR",
};
export const UploaderStatus = {
    SUCCESS: "SUCCESS",
    SYSTEM_ERROR: "SYSTEM_ERROR",
    USER_ERROR: "USER_ERROR",
};
export const MediaUriType = {
    FILE_URI: "FILE_URI",
    RTSP_URI: "RTSP_URI",
};
export const SyncStatus = {
    ACKNOWLEDGED: "ACKNOWLEDGED",
    DELETE_FAILED: "DELETE_FAILED",
    DELETING: "DELETING",
    DELETING_ACKNOWLEDGED: "DELETING_ACKNOWLEDGED",
    IN_SYNC: "IN_SYNC",
    SYNCING: "SYNCING",
    SYNC_FAILED: "SYNC_FAILED",
};
export const Format = {
    JPEG: "JPEG",
    PNG: "PNG",
};
export const FormatConfigKey = {
    JPEGQuality: "JPEGQuality",
};
export const ImageSelectorType = {
    PRODUCER_TIMESTAMP: "PRODUCER_TIMESTAMP",
    SERVER_TIMESTAMP: "SERVER_TIMESTAMP",
};
export const MediaStorageConfigurationStatus = {
    DISABLED: "DISABLED",
    ENABLED: "ENABLED",
};
export class InvalidResourceFormatException extends __BaseException {
    name = "InvalidResourceFormatException";
    $fault = "client";
    Message;
    constructor(opts) {
        super({
            name: "InvalidResourceFormatException",
            $fault: "client",
            ...opts,
        });
        Object.setPrototypeOf(this, InvalidResourceFormatException.prototype);
        this.Message = opts.Message;
    }
}
export class NoDataRetentionException extends __BaseException {
    name = "NoDataRetentionException";
    $fault = "client";
    Message;
    constructor(opts) {
        super({
            name: "NoDataRetentionException",
            $fault: "client",
            ...opts,
        });
        Object.setPrototypeOf(this, NoDataRetentionException.prototype);
        this.Message = opts.Message;
    }
}
export const UpdateDataRetentionOperation = {
    DECREASE_DATA_RETENTION: "DECREASE_DATA_RETENTION",
    INCREASE_DATA_RETENTION: "INCREASE_DATA_RETENTION",
};
export const MediaSourceConfigFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.MediaUriSecretArn && { MediaUriSecretArn: SENSITIVE_STRING }),
});
export const RecorderConfigFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.MediaSourceConfig && { MediaSourceConfig: MediaSourceConfigFilterSensitiveLog(obj.MediaSourceConfig) }),
});
export const EdgeConfigFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.RecorderConfig && { RecorderConfig: RecorderConfigFilterSensitiveLog(obj.RecorderConfig) }),
});
export const DescribeEdgeConfigurationOutputFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.EdgeConfig && { EdgeConfig: EdgeConfigFilterSensitiveLog(obj.EdgeConfig) }),
});
export const ListEdgeAgentConfigurationsEdgeConfigFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.EdgeConfig && { EdgeConfig: EdgeConfigFilterSensitiveLog(obj.EdgeConfig) }),
});
export const ListEdgeAgentConfigurationsOutputFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.EdgeConfigs && {
        EdgeConfigs: obj.EdgeConfigs.map((item) => ListEdgeAgentConfigurationsEdgeConfigFilterSensitiveLog(item)),
    }),
});
export const StartEdgeConfigurationUpdateInputFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.EdgeConfig && { EdgeConfig: EdgeConfigFilterSensitiveLog(obj.EdgeConfig) }),
});
export const StartEdgeConfigurationUpdateOutputFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.EdgeConfig && { EdgeConfig: EdgeConfigFilterSensitiveLog(obj.EdgeConfig) }),
});
